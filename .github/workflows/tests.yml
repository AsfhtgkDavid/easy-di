name: Python tests

on: [pull_request, workflow_dispatch]

jobs:
  unittests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    env:
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: '**/uv.lock **/requirements*.txt'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Tests
        run: |
          uv venv
          source .venv/bin/activate
          uv sync --no-dev
          python -m unittest discover -s tests -p '*_test.py'

  mypy-static-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]

    env:
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: '**/uv.lock **/requirements*.txt'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Tests
        run: |
          uvx --from 'mypy[faster-cache,reports]' mypy src
